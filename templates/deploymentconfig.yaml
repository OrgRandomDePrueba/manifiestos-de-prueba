kind: DeploymentConfig
apiVersion: apps.openshift.io/v1
metadata:
  name: {{ .Values.appname }}
  annotations:
    openshift.io/generated-by: OpenShiftWebConsole
  name: {{ .Values.appname }}
  labels:
    app: {{ .Values.appname }}
    {{if .Values.clusterlogging}}
    log: clusterlogging
    {{end}}
    source: cicd
spec:
  strategy:
    type: Rolling
    rollingParams:
      updatePeriodSeconds: 1
      intervalSeconds: 1
      timeoutSeconds: 600
      maxUnavailable: 25%
      maxSurge: 25%
    resources: {}
    activeDeadlineSeconds: 21600
  triggers:
    - type: ImageChange
      imageChangeParams:
        automatic: true
        containerNames:
          - {{ .Values.appname }}
        from:
          kind: ImageStreamTag
          name: '{{ .Values.appname }}:{{ .Chart.AppVersion }}'
    - type: ConfigChange
  {{ if not .Values.cronjob.enable }}
   {{ if not ( kindIs "float64" .Values.replicacontroller.replicas ) }}
  replicas: 1
   {{ else }}
   {{ if gt .Values.replicacontroller.replicas 10.0 }}
  replicas: 10
   {{ else }}
  replicas: {{ .Values.replicacontroller.replicas }}
   {{ end }}
   {{ end }}
  {{ else }}
  replicas: 0
  {{ end }}
  revisionHistoryLimit: {{ .Values.replicacontroller.revisionHistoryLimit }}
  selector:
    app: {{ .Values.appname }}
    deploymentconfig: {{ .Values.appname }}
  template:
    metadata:
      labels:
        app: {{ .Values.appname }}
        deploymentconfig: {{ .Values.appname }}
        {{if .Values.clusterlogging}}
        log: clusterlogging
        {{end}}
        source: cicd
    spec:
# Primer bloque de configmap ######################################################
      {{if .Values.configMap.enable}}
      volumes:
        - name: {{ .Values.appname }}-configmap
          configMap:
            name: {{ .Values.appname }}-configmap
            items:
              - key: {{ .Values.configMap.key }}
                path: {{ .Values.configMap.file }}
            defaultMode: 420 
      {{end}}
###################################################################################
      containers:
        - name: {{ .Values.appname }}
          ports:
            - containerPort: {{ .Values.service.targetPort }}
              protocol: TCP
# Segundo bloque de configmap #####################################################
          {{if .Values.configMap.enable}}
          volumeMounts:
            - name: {{ .Values.appname }}-configmap
              mountPath: {{ .Values.configMap.path }}
          {{end}}
# Bloque de healthchecks ##########################################################
          {{if .Values.healthcheck.readiness}}
          readinessProbe:
            httpGet:
              path: {{ .Values.healthcheck.readinesspath }}
              port: {{ .Values.healthcheck.readinessport }}
              scheme: {{ .Values.healthcheck.readinessscheme }}
            initialDelaySeconds: 5
            timeoutSeconds: 30
            periodSeconds: 35
            successThreshold: 1
            failureThreshold: 3
          {{end}}
          {{if .Values.healthcheck.liveness}}
          livenessProbe:
            httpGet:
              path: {{ .Values.healthcheck.livenesspath }}
              port: {{ .Values.healthcheck.livenessport }}
              scheme: {{ .Values.healthcheck.livenessscheme }}
            initialDelaySeconds: 5
            timeoutSeconds: 30
            periodSeconds: 30
            successThreshold: 1
            failureThreshold: 3
          {{end}}
###################################################################################
          env: 
          {{- include "helpers.list-env-variables" . | indent 12 }}
          {{- include "helpers.list-env-variables-mormal" . | indent 12 }}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          imagePullPolicy: IfNotPresent
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      securityContext: {}
      schedulerName: default-scheduler
      